{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\Project\\\\grievance-management-front\\\\src\\\\Pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport { changePassword } from \"../api/Employee_API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword(props) {\n  _s();\n  const [pass, setPass] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [valid, setValid] = useState({\n    oldPassword: {\n      isError: false,\n      errorMessage: \"\"\n    },\n    newPassword: {\n      isError: false,\n      errorMessage: \"\"\n    },\n    confirmPassword: {\n      isError: false,\n      errorMessage: \"\"\n    }\n  });\n  const isValid = () => {\n    if (pass.oldPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = true;\n      temp.oldPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.oldPassword.length < 5 || pass.oldPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = true;\n      temp.oldPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    }\n    if (pass.newPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.newPassword.length < 5 || pass.newPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    } else if (pass.newPassword === pass.oldPassword) {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Old and new Password can not be same\";\n      setValid(temp);\n    }\n    if (pass.confirmPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.confirmPassword !== pass.newPassword) {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"New password is not matching with Confirm password\";\n      setValid(temp);\n    } else if (pass.confirmPassword.length < 5 || pass.confirmPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    }\n  };\n  const handleChange = e => {\n    if (valid.oldPassword.isError || valid.newPassword.isError || valid.confirmPassword.isError) {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = false;\n      temp.oldPassword.errorMessage = \"\";\n      temp.newPassword.isError = false;\n      temp.newPassword.errorMessage = \"\";\n      temp.confirmPassword.isError = false;\n      temp.confirmPassword.errorMessage = \"\";\n      setValid(temp);\n    }\n    setPass({\n      ...pass,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    isValid();\n    console.log(pass);\n  };\n  const fields = [{\n    field: \"Input\",\n    label: \"Old Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"oldPassword\",\n    value: pass.oldPassword,\n    placeholder: \"Enter the old password\",\n    onChange: handleChange,\n    isValid: valid.oldPassword.isError,\n    errorMessage: valid.oldPassword.errorMessage\n  }, {\n    field: \"Input\",\n    label: \"New Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"newPassword\",\n    value: pass.newPassword,\n    placeholder: \"Enter the new password\",\n    onChange: handleChange,\n    isValid: valid.newPassword.isError,\n    errorMessage: valid.newPassword.errorMessage\n  }, {\n    field: \"Input\",\n    label: \"Confirm Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: pass.confirmPassword,\n    placeholder: \"Retype new  password\",\n    onChange: handleChange,\n    isValid: valid.confirmPassword.isError,\n    errorMessage: valid.confirmPassword.errorMessage\n  }, {\n    field: \"Button\",\n    type: \"submit\",\n    className: \"submit-box\",\n    value: \"Submit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    set: props.set,\n    header: \"Change Password\",\n    fields: fields,\n    onsubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"dmi9zEFU/jIzaxJuiXLUZ0J3CBw=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Modal","changePassword","jsxDEV","_jsxDEV","ResetPassword","props","_s","pass","setPass","oldPassword","newPassword","confirmPassword","valid","setValid","isError","errorMessage","isValid","temp","length","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","fields","field","label","className","type","placeholder","onChange","set","header","onsubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adars/OneDrive/Desktop/Project/grievance-management-front/src/Pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport { changePassword } from \"../api/Employee_API\";\r\n\r\nfunction ResetPassword(props) {\r\n  const [pass, setPass] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [valid, setValid] = useState({\r\n    oldPassword: {\r\n      isError: false,\r\n      errorMessage: \"\",\r\n    },\r\n    newPassword: {\r\n      isError: false,\r\n      errorMessage: \"\",\r\n    },\r\n    confirmPassword: {\r\n      isError: false,\r\n      errorMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const isValid = () => {\r\n    if (pass.oldPassword === \"\") {\r\n      const temp = { ...valid };\r\n      temp.oldPassword.isError = true;\r\n      temp.oldPassword.errorMessage = \"Password can not be Empty\";\r\n      setValid(temp);\r\n    } else if (pass.oldPassword.length < 5 || pass.oldPassword.length > 18) {\r\n      const temp = { ...valid };\r\n      temp.oldPassword.isError = true;\r\n      temp.oldPassword.errorMessage = \"Password Range should between 5 to 18\";\r\n      setValid(temp);\r\n    }\r\n    if (pass.newPassword === \"\") {\r\n      const temp = { ...valid };\r\n      temp.newPassword.isError = true;\r\n      temp.newPassword.errorMessage = \"Password can not be Empty\";\r\n      setValid(temp);\r\n    } else if (pass.newPassword.length < 5 || pass.newPassword.length > 18) {\r\n      const temp = { ...valid };\r\n      temp.newPassword.isError = true;\r\n      temp.newPassword.errorMessage = \"Password Range should between 5 to 18\";\r\n      setValid(temp);\r\n    } else if (pass.newPassword === pass.oldPassword) {\r\n      const temp = { ...valid };\r\n      temp.newPassword.isError = true;\r\n      temp.newPassword.errorMessage = \"Old and new Password can not be same\";\r\n      setValid(temp);\r\n    }\r\n\r\n    if (pass.confirmPassword === \"\") {\r\n      const temp = { ...valid };\r\n      temp.confirmPassword.isError = true;\r\n      temp.confirmPassword.errorMessage = \"Password can not be Empty\";\r\n      setValid(temp);\r\n    } else if (pass.confirmPassword !== pass.newPassword) {\r\n      const temp = { ...valid };\r\n      temp.confirmPassword.isError = true;\r\n      temp.confirmPassword.errorMessage =\r\n        \"New password is not matching with Confirm password\";\r\n      setValid(temp);\r\n    } else if (\r\n      pass.confirmPassword.length < 5 ||\r\n      pass.confirmPassword.length > 18\r\n    ) {\r\n      const temp = { ...valid };\r\n      temp.confirmPassword.isError = true;\r\n      temp.confirmPassword.errorMessage =\r\n        \"Password Range should between 5 to 18\";\r\n      setValid(temp);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (\r\n      valid.oldPassword.isError ||\r\n      valid.newPassword.isError ||\r\n      valid.confirmPassword.isError\r\n    ) {\r\n      const temp = { ...valid };\r\n      temp.oldPassword.isError = false;\r\n      temp.oldPassword.errorMessage = \"\";\r\n      temp.newPassword.isError = false;\r\n      temp.newPassword.errorMessage = \"\";\r\n      temp.confirmPassword.isError = false;\r\n      temp.confirmPassword.errorMessage = \"\";\r\n      setValid(temp);\r\n    }\r\n    setPass({ ...pass, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    isValid();\r\n    console.log(pass);\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      field: \"Input\",\r\n      label: \"Old Password\",\r\n      className: \"details\",\r\n      type: \"password\",\r\n      name: \"oldPassword\",\r\n      value: pass.oldPassword,\r\n      placeholder: \"Enter the old password\",\r\n      onChange: handleChange,\r\n      isValid: valid.oldPassword.isError,\r\n      errorMessage: valid.oldPassword.errorMessage,\r\n    },\r\n    {\r\n      field: \"Input\",\r\n      label: \"New Password\",\r\n      className: \"details\",\r\n      type: \"password\",\r\n      name: \"newPassword\",\r\n      value: pass.newPassword,\r\n      placeholder: \"Enter the new password\",\r\n      onChange: handleChange,\r\n      isValid: valid.newPassword.isError,\r\n      errorMessage: valid.newPassword.errorMessage,\r\n    },\r\n    {\r\n      field: \"Input\",\r\n      label: \"Confirm Password\",\r\n      className: \"details\",\r\n      type: \"password\",\r\n      name: \"confirmPassword\",\r\n      value: pass.confirmPassword,\r\n      placeholder: \"Retype new  password\",\r\n      onChange: handleChange,\r\n      isValid: valid.confirmPassword.isError,\r\n      errorMessage: valid.confirmPassword.errorMessage,\r\n    },\r\n    {\r\n      field: \"Button\",\r\n      type: \"submit\",\r\n      className: \"submit-box\",\r\n      value: \"Submit\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Modal\r\n      set={props.set}\r\n      header={\"Change Password\"}\r\n      fields={fields}\r\n      onsubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}