{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\Project\\\\grievance-management-front\\\\src\\\\components\\\\Table\\\\Table.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Table = ({\n  data,\n  columns,\n  onRowClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: column.title\n      }, column.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: () => onRowClick(row),\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: column.key.includes('.') //check if key include a dot  \n        ? column.key.split('.').reduce((obj, key) => obj[key], row) //if dot present then split it into array\n        : row[column.key]\n      }, column.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this) //then reduce the object key wise like first obj is row then first key then next and so on.\n      )\n    }, row.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","data","columns","onRowClick","_jsxDEV","children","map","column","title","key","fileName","_jsxFileName","lineNumber","columnNumber","row","onClick","includes","split","reduce","obj","id","_c","$RefreshReg$"],"sources":["C:/Users/adars/OneDrive/Desktop/Project/grievance-management-front/src/components/Table/Table.js"],"sourcesContent":["export const Table= ({ data , columns , onRowClick})=>{\r\n    \r\n    return (\r\n        <table>\r\n            <tr>\r\n                {columns.map((column)=>(\r\n                    <th key={column.key}>{column.title}</th>\r\n                ))}\r\n            </tr>\r\n            {data.map((row)=> ( \r\n                <tr key={row.id} onClick={()=> onRowClick(row)}>\r\n                    {columns.map((column)=>(\r\n                        <td key={column.key}>{column.key.includes('.') //check if key include a dot  \r\n                        ? column.key.split('.').reduce((obj, key) => obj[key], row) //if dot present then split it into array\r\n                        : row[column.key]}</td>  //then reduce the object key wise like first obj is row then first key then next and so on.\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </table>\r\n    )\r\n};\r\n"],"mappings":";;AAAA,OAAO,MAAMA,KAAK,GAAEA,CAAC;EAAEC,IAAI;EAAGC,OAAO;EAAGC;AAAU,CAAC,KAAG;EAElD,oBACIC,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EACKH,OAAO,CAACI,GAAG,CAAEC,MAAM,iBAChBH,OAAA;QAAAC,QAAA,EAAsBE,MAAM,CAACC;MAAK,GAAzBD,MAAM,CAACE,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACJZ,IAAI,CAACK,GAAG,CAAEQ,GAAG,iBACVV,OAAA;MAAiBW,OAAO,EAAEA,CAAA,KAAKZ,UAAU,CAACW,GAAG,CAAE;MAAAT,QAAA,EAC1CH,OAAO,CAACI,GAAG,CAAEC,MAAM,iBAChBH,OAAA;QAAAC,QAAA,EAAsBE,MAAM,CAACE,GAAG,CAACO,QAAQ,CAAC,GAAG,CAAC,CAAC;QAAA,EAC7CT,MAAM,CAACE,GAAG,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEV,GAAG,KAAKU,GAAG,CAACV,GAAG,CAAC,EAAEK,GAAG,CAAC,CAAC;QAAA,EAC1DA,GAAG,CAACP,MAAM,CAACE,GAAG;MAAC,GAFRF,MAAM,CAACE,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEG,CAAC,CAAE;MAC5B;IAAC,GALGC,GAAG,CAACM,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACQ,EAAA,GApBWrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}