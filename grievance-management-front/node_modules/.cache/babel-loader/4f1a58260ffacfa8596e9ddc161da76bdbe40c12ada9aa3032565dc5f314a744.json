{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\Project\\\\grievance-management-front\\\\src\\\\Pages\\\\AddDepartment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport { addDepartment } from \"../api/Department_API\";\nimport PopUp from \"../components/PopUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDepartment(props) {\n  _s();\n  const [department, setDepartment] = useState({\n    depName: \"\"\n  });\n  const [deptError, setDeptError] = useState(\"\");\n  const [valid, setValid] = useState({\n    isError: false,\n    errorMessage: \"\"\n  });\n\n  // useEffect(()=>{\n  //   setTimeout(()=>{\n  //     props.set(false);\n  //   },1000)\n  // },[])\n\n  const handleChange = e => {\n    if (valid.isError) {\n      setValid({\n        ...valid,\n        isError: false\n      });\n    }\n    setDepartment({\n      ...department,\n      [e.target.name]: e.target.value\n    });\n  };\n  const isValid = () => {\n    if (department.depName === \"\") {\n      setValid(prevValid => ({\n        ...prevValid,\n        isError: true,\n        errorMessage: \"Department name can not be empty\"\n      }));\n      return true;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const flag = isValid();\n    if (!flag) {\n      addDepartment(department).then(resp => {\n        // alert(\"Depatment is Added!!\");\n        setPopUp(true);\n      }).catch(error => {\n        if (error.code === \"ERR_BAD_REQUEST\") {\n          alert(error.response.data.depName);\n        } else {\n          alert(error);\n        }\n      });\n    }\n    return;\n  };\n  const fields = [{\n    field: \"Input\",\n    label: \"Department Name\",\n    className: \"details\",\n    type: \"text\",\n    name: \"depName\",\n    value: department.depName,\n    placeholder: \"Enter the Department Name\",\n    onChange: handleChange,\n    isValid: valid.isError,\n    errorMessage: valid.errorMessage\n  }, {\n    field: \"Button\",\n    type: \"submit\",\n    className: \"submit-box\",\n    value: \"Submit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      set: props.set,\n      header: \"Add Department\",\n      fields: fields,\n      onsubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(AddDepartment, \"Qe1+KEk/L70/c6qglIxY69n5feQ=\");\n_c = AddDepartment;\nexport default AddDepartment;\nvar _c;\n$RefreshReg$(_c, \"AddDepartment\");","map":{"version":3,"names":["React","useEffect","useState","Modal","addDepartment","PopUp","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDepartment","props","_s","department","setDepartment","depName","deptError","setDeptError","valid","setValid","isError","errorMessage","handleChange","e","target","name","value","isValid","prevValid","handleSubmit","preventDefault","flag","then","resp","setPopUp","catch","error","code","alert","response","data","fields","field","label","className","type","placeholder","onChange","children","set","header","onsubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adars/OneDrive/Desktop/Project/grievance-management-front/src/Pages/AddDepartment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport { addDepartment } from \"../api/Department_API\";\r\nimport PopUp from \"../components/PopUp\";\r\n\r\nfunction AddDepartment(props) {\r\n  const [department, setDepartment] = useState({\r\n    depName: \"\",\r\n  });\r\n  const[deptError, setDeptError] = useState(\"\");\r\n\r\n  const [valid, setValid] = useState({\r\n    isError: false,\r\n    errorMessage: \"\",\r\n  });\r\n\r\n \r\n  // useEffect(()=>{\r\n  //   setTimeout(()=>{\r\n  //     props.set(false);\r\n  //   },1000)\r\n  // },[])\r\n\r\n  const handleChange = (e) => {\r\n    if (valid.isError) {\r\n      setValid({\r\n        ...valid,\r\n        isError: false,\r\n      });\r\n    }\r\n    setDepartment({ ...department, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const isValid =  () => {\r\n    if (department.depName === \"\") {\r\n      setValid((prevValid) => ({\r\n        ...prevValid,\r\n        isError: true,\r\n        errorMessage: \"Department name can not be empty\",\r\n      }));\r\n      return true;\r\n      \r\n    }\r\n  };\r\n\r\n  const handleSubmit =  (e) => {\r\n    e.preventDefault();\r\n\r\n    const flag = isValid();\r\n\r\n    if (!flag) {\r\n       addDepartment(department)\r\n        .then((resp) => {\r\n          // alert(\"Depatment is Added!!\");\r\n          setPopUp(true);\r\n        })\r\n        .catch((error) => {\r\n          if(error.code === \"ERR_BAD_REQUEST\"){\r\n            alert(error.response.data.depName)\r\n          }\r\n          else{\r\n          alert(error);\r\n    }\r\n  });\r\n    }\r\n    return;\r\n  };\r\n\r\n\r\n  \r\n  const fields = [\r\n    {\r\n      field: \"Input\",\r\n      label: \"Department Name\",\r\n      className: \"details\",\r\n      type: \"text\",\r\n      name: \"depName\",\r\n      value: department.depName,\r\n      placeholder: \"Enter the Department Name\",\r\n      onChange: handleChange,\r\n      isValid: valid.isError,\r\n      errorMessage: valid.errorMessage,\r\n    },\r\n    {\r\n      field: \"Button\",\r\n      type: \"submit\",\r\n      className: \"submit-box\",\r\n      value: \"Submit\",\r\n    },\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n    \r\n    <Modal\r\n      set={props.set}\r\n      header={\"Add Department\"}\r\n      fields={fields}\r\n      onsubmit={handleSubmit}\r\n    />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddDepartment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}