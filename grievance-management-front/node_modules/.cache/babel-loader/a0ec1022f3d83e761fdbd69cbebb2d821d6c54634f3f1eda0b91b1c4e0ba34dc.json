{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\OneDrive\\\\Desktop\\\\Project\\\\grievance-management-front\\\\src\\\\Pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../components/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword(props) {\n  _s();\n  const [pass, setPass] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [valid, setValid] = useState({\n    oldPassword: {\n      isError: false,\n      errorMessage: \"\"\n    },\n    newPassword: {\n      isError: false,\n      errorMessage: \"\"\n    },\n    confirmPassword: {\n      isError: false,\n      errorMessage: \"\"\n    }\n  });\n  const isValid = () => {\n    if (pass.oldPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = true;\n      temp.oldPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.oldPassword.length < 5 || pass.oldPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = true;\n      temp.oldPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    }\n    if (pass.newPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.newPassword.length < 5 || pass.newPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    } else if (pass.newPassword === pass.oldPassword) {\n      const temp = {\n        ...valid\n      };\n      temp.newPassword.isError = true;\n      temp.newPassword.errorMessage = \"Old and new Password can not be same\";\n      setValid(temp);\n    }\n    if (pass.confirmPassword === \"\") {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"Password can not be Empty\";\n      setValid(temp);\n    } else if (pass.confirmPassword !== pass.newPassword) {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"New password is not matching with Confirm password\";\n      setValid(temp);\n    } else if (pass.confirmPassword.length < 5 || pass.confirmPassword.length > 18) {\n      const temp = {\n        ...valid\n      };\n      temp.confirmPassword.isError = true;\n      temp.confirmPassword.errorMessage = \"Password Range should between 5 to 18\";\n      setValid(temp);\n    }\n  };\n  const handleChange = e => {\n    if (valid.oldPassword.isError || valid.newPassword.isError || valid.confirmPassword.isError) {\n      const temp = {\n        ...valid\n      };\n      temp.oldPassword.isError = false;\n      temp.oldPassword.errorMessage = \"\";\n      temp.newPassword.isError = false;\n      temp.newPassword.errorMessage = \"\";\n      temp.confirmPassword.isError = false;\n      temp.confirmPassword.errorMessage = \"\";\n      setValid(temp);\n    }\n    setPass({\n      ...pass,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    isValid();\n    console.log(pass);\n  };\n  const fields = [{\n    field: \"Input\",\n    label: \"Old Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"oldPassword\",\n    value: pass.oldPassword,\n    placeholder: \"Enter the old password\",\n    onChange: handleChange,\n    isValid: valid.oldPassword.isError,\n    errorMessage: valid.oldPassword.errorMessage\n  }, {\n    field: \"Input\",\n    label: \"New Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"newPassword\",\n    value: pass.newPassword,\n    placeholder: \"Enter the new password\",\n    onChange: handleChange,\n    isValid: valid.newPassword.isError,\n    errorMessage: valid.newPassword.errorMessage\n  }, {\n    field: \"Input\",\n    label: \"Confirm Password\",\n    className: \"details\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: pass.confirmPassword,\n    placeholder: \"Retype new  password\",\n    onChange: handleChange,\n    isValid: valid.confirmPassword.isError,\n    errorMessage: valid.confirmPassword.errorMessage\n  }, {\n    field: \"Button\",\n    type: \"submit\",\n    className: \"submit-box\",\n    value: \"Submit\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    set: props.set,\n    header: \"Change Password\",\n    fields: fields,\n    onsubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"Mm3AE7UZvC+Q3DzFT9dXdTklWjQ=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","ResetPassword","props","_s","pass","setPass","oldPassword","newPassword","confirmPassword","valid","setValid","isError","errorMessage","isValid","temp","length","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","fields","field","label","className","type","placeholder","onChange","set","header","onsubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adars/OneDrive/Desktop/Project/grievance-management-front/src/Pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Modal from '../components/Modal/Modal';\r\n\r\nfunction ResetPassword(props) {\r\n\r\n    const [pass , setPass] = useState({\r\n        oldPassword:\"\",\r\n        newPassword:\"\",\r\n        confirmPassword:\"\",\r\n    });\r\n\r\n    const [valid , setValid] = useState({\r\n        oldPassword:{\r\n            isError:false,\r\n            errorMessage:\"\"\r\n        },\r\n        newPassword:{\r\n            isError:false,\r\n            errorMessage:\"\"\r\n        },\r\n        confirmPassword:{\r\n            isError:false,\r\n            errorMessage:\"\"\r\n        },\r\n    })\r\n\r\n    const isValid=()=>{\r\n        if(pass.oldPassword === \"\" ){\r\n            const temp = {...valid};\r\n            temp.oldPassword.isError = true;\r\n            temp.oldPassword.errorMessage = \"Password can not be Empty\";\r\n            setValid(temp);\r\n        }\r\n        else if(pass.oldPassword.length < 5 || pass.oldPassword.length > 18){\r\n            const temp = {...valid};\r\n            temp.oldPassword.isError = true;\r\n            temp.oldPassword.errorMessage = \"Password Range should between 5 to 18\";\r\n            setValid(temp);\r\n        }\r\n        if(pass.newPassword === \"\" ){\r\n            const temp = {...valid};\r\n            temp.newPassword.isError = true;\r\n            temp.newPassword.errorMessage = \"Password can not be Empty\";\r\n            setValid(temp);\r\n        }\r\n        else if(pass.newPassword.length < 5 || pass.newPassword.length > 18){\r\n            const temp = {...valid};\r\n            temp.newPassword.isError = true;\r\n            temp.newPassword.errorMessage = \"Password Range should between 5 to 18\";\r\n            setValid(temp);\r\n        }\r\n        else if(pass.newPassword === pass.oldPassword){\r\n            const temp = {...valid};\r\n            temp.newPassword.isError = true;\r\n            temp.newPassword.errorMessage = \"Old and new Password can not be same\";\r\n            setValid(temp);\r\n        }\r\n\r\n        if(pass.confirmPassword === \"\" ){\r\n            const temp = {...valid};\r\n            temp.confirmPassword.isError = true;\r\n            temp.confirmPassword.errorMessage = \"Password can not be Empty\";\r\n            setValid(temp);\r\n        }\r\n        else if(pass.confirmPassword !== pass.newPassword){\r\n            const temp = {...valid};\r\n            temp.confirmPassword.isError = true;\r\n            temp.confirmPassword.errorMessage = \"New password is not matching with Confirm password\";\r\n            setValid(temp);\r\n        }\r\n        else if(pass.confirmPassword.length < 5 || pass.confirmPassword.length > 18){\r\n            const temp = {...valid};\r\n            temp.confirmPassword.isError = true;\r\n            temp.confirmPassword.errorMessage = \"Password Range should between 5 to 18\";\r\n            setValid(temp);\r\n        }\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        \r\n        if(valid.oldPassword.isError || valid.newPassword.isError || valid.confirmPassword.isError){\r\n            const temp = {...valid};\r\n            temp.oldPassword.isError = false;\r\n            temp.oldPassword.errorMessage = \"\";\r\n            temp.newPassword.isError = false;\r\n            temp.newPassword.errorMessage = \"\";\r\n            temp.confirmPassword.isError = false;\r\n            temp.confirmPassword.errorMessage = \"\";\r\n            setValid(temp);\r\n        }\r\n        setPass({...pass , [e.target.name] : e.target.value});\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        isValid();\r\n        console.log(pass);\r\n    }\r\n\r\n    const fields = [\r\n        {\r\n            field:\"Input\",\r\n            label:\"Old Password\",\r\n            className:\"details\",\r\n            type:\"password\",\r\n            name:\"oldPassword\",\r\n            value:pass.oldPassword,\r\n            placeholder:\"Enter the old password\",\r\n            onChange:handleChange,\r\n            isValid:valid.oldPassword.isError,\r\n            errorMessage:valid.oldPassword.errorMessage\r\n        },\r\n        {\r\n            field:\"Input\",\r\n            label:\"New Password\",\r\n            className:\"details\",\r\n            type:\"password\",\r\n            name:\"newPassword\",\r\n            value:pass.newPassword,\r\n            placeholder:\"Enter the new password\",\r\n            onChange:handleChange,\r\n            isValid:valid.newPassword.isError,\r\n            errorMessage:valid.newPassword.errorMessage\r\n        },\r\n        {\r\n            field:\"Input\",\r\n            label:\"Confirm Password\",\r\n            className:\"details\",\r\n            type:\"password\",\r\n            name:\"confirmPassword\",\r\n            value:pass.confirmPassword,\r\n            placeholder:\"Retype new  password\",\r\n            onChange:handleChange,\r\n            isValid:valid.confirmPassword.isError,\r\n            errorMessage:valid.confirmPassword.errorMessage\r\n        },\r\n        {\r\n            field:\"Button\",\r\n            type:\"submit\",\r\n            className:\"submit-box\",\r\n            value:\"Submit\"\r\n        }\r\n    ]\r\n  \r\n  return (\r\n    <Modal set={props.set} header={\"Change Password\"} fields={fields} onsubmit={handleSubmit}/>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}